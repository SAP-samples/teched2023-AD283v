{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["createDeviceModel","___model_models","Component","BaseComponent","extend","metadata","manifest","init","_init","BaseComponent.prototype.init.call","this","getRouter","initialize","setModel"],"sources":["Component.ts"],"sourcesContent":["import BaseComponent from \"sap/ui/core/UIComponent\";\nimport { createDeviceModel } from \"./model/models\";\n\n/**\n * @namespace keepcool.sensormanager\n */\nexport default class Component extends BaseComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\"\n\t};\n\n    /**\n     * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n     * @public\n     * @override\n     */\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n        // enable routing\n        this.getRouter().initialize();\n\n        // set the device model\n        this.setModel(createDeviceModel(), \"device\");\n\t}\n}"],"mappings":"AAAA,uGACSA,EAAiBC,EAAA,qBAE1B,IAGqBC,EAAkBC,EAAaC,OAAA,oCAErCC,SAAW,CACxBC,SAAU,QAQJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGMA,KAAKC,YAAYC,aAGjBF,KAAKG,SAASb,IAAqB,SAC1C,IAAC,OApBmBE,CAAS","sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["App","Controller","extend","onInit","_onInit"],"sources":["App.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\n\n/**\n * @namespace keepcool.sensormanager.controller\n */\nexport default class App extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n}"],"mappings":"AAAA,mFAEA,IAGqBA,EAAYC,EAAUC,OAAA,yCAGhCC,OAAM,SAAAC,IAEb,IAAC,OALgBJ,CAAG","sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"SensorStatus.controller.js","names":["SensorStatus","Controller","extend","onInit","_onInit","_getRouter$getRoute","this","getOwnerComponent","getRouter","getRoute","attachMatched","onRouteMatched","_onRouteMatched","event","_this$getView","getView","bindElement","path","getParameter","index","model","navToSensors","_navToSensors","navTo"],"sources":["SensorStatus.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport { Route$MatchedEvent } from \"sap/ui/core/routing/Route\";\n\ninterface RouteMatchedParameters {\n    index: number    \n}\n\n/**\n * @namespace keepcool.sensormanager.controller\n */\nexport default class SensorStatus extends Controller {\n    public onInit() {\n        (this.getOwnerComponent() as UIComponent).getRouter().getRoute(\"RouteSensorStatus\")?.attachMatched(this.onRouteMatched, this);\n    }\n\n    public onRouteMatched(event: Route$MatchedEvent) {\n        this.getView()?.bindElement({\n            path: \"/sensors/\" + (event.getParameter(\"arguments\") as RouteMatchedParameters).index,\n            model: \"sensorModel\"\n        });\n    }\n\n    public navToSensors() {\n        (this.getOwnerComponent() as UIComponent).getRouter().navTo(\"RouteSensors\");\n    }\n        \n}\n"],"mappings":"AAAA,mFAQA,IAGqBA,EAAqBC,EAAUC,OAAA,kDACzCC,OAAM,SAAAC,IAAG,IAAAC,GACZA,EAACC,KAAKC,oBAAoCC,YAAYC,SAAS,wBAAoB,MAAAJ,SAAA,GAAnFA,EAAqFK,cAAcJ,KAAKK,eAAgBL,KAC5H,EAEOK,eAAc,SAAAC,EAACC,GAA2B,IAAAC,GAC7CA,EAAAR,KAAKS,aAAS,MAAAD,SAAA,GAAdA,EAAgBE,YAAY,CACxBC,KAAM,YAAeJ,EAAMK,aAAa,aAAwCC,MAChFC,MAAO,eAEf,EAEOC,aAAY,SAAAC,IACdhB,KAAKC,oBAAoCC,YAAYe,MAAM,eAChE,IAAC,OAdgBvB,CAAY","sourceRoot":"controller"}},{"offset":{"line":12,"column":0},"map":{"version":3,"file":"Sensors.controller.js","names":["Threshold","___format_util","Sensors","Controller","extend","constructor","prototype","apply","this","arguments","statusFilters","onInit","_onInit","ownerComp","getOwnerComponent","getSensorModel","dataLoaded","then","resourceModel","getModel","resourceBundle","getResourceBundle","MessageToast","show","getText","closeOnBrowserNavigation","bind","oErr","message","_getSensorModel","oModel","onFilterSelect","_onFilterSelect","event","_this$getView","listBinding","getView","byId","getBinding","key","getParameter","Filter","FilterOperator","LT","Warm","BT","Hot","GT","filter","onCustomerInfoPress","_onCustomerInfoPress","_this$dialog","dialog","loadFragment","name","open","err","onCustomerInfoClose","_onCustomerInfoClose","close","navToSensorStatus","_navToSensorStatus","_event$getSource$getB","sensorIndex","getSource","getBindingContext","getProperty","getRouter","navTo","index"],"sources":["Sensors.controller.ts"],"sourcesContent":["import ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport ListBinding from \"sap/ui/model/ListBinding\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { Threshold } from \"../format/util\";\nimport Dialog from \"sap/m/Dialog\";\nimport { ListItemBase$PressEvent } from \"sap/m/ListItemBase\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\n\n/**\n * @namespace keepcool.sensormanager.controller\n */\nexport default class Sensors extends Controller {\n\n    public onInit() {\n        const ownerComp = this.getOwnerComponent();\n        this.getSensorModel().dataLoaded().then(function() {\n            const resourceModel = ownerComp?.getModel(\"i18n\") as ResourceModel;\n            const resourceBundle = resourceModel.getResourceBundle() as ResourceBundle;\n            MessageToast.show(resourceBundle.getText(\"msgSensorDataLoaded\") as string, { closeOnBrowserNavigation: false });\n        }.bind(this)).catch(function(oErr: Error){\n            MessageToast.show(oErr.message, { closeOnBrowserNavigation: false });\n        });\n    }\n\n    public getSensorModel() {\n        const ownerComp = this.getOwnerComponent();\n        const oModel = ownerComp?.getModel(\"sensorModel\") as JSONModel;\n        return oModel;\n    }\n\n    private statusFilters: Filter[] = [];\n\n    onFilterSelect(event: IconTabBar$SelectEvent): void {\n\n        const listBinding = this.getView()?.byId(\"sensorsList\")?.getBinding(\"items\") as ListBinding;\n        const key = (event.getParameter(\"key\") as string);\n\n        if (key === \"Cold\") {\n            this.statusFilters = [new Filter(\"temperature\", FilterOperator.LT, Threshold.Warm, false)];\n        } else if (key === \"Warm\") {\n            this.statusFilters = [new Filter(\"temperature\", FilterOperator.BT, Threshold.Warm, Threshold.Hot)];\n        } else if (key === \"Hot\") {\n            this.statusFilters = [new Filter(\"temperature\", FilterOperator.GT, Threshold.Hot, false)];\n        } else {\n            this.statusFilters = [];\n        }\n\n        listBinding.filter(this.statusFilters);\n    }\n\n    private dialog: Promise<Dialog>;\n\n    onCustomerInfoPress(): void {\n        this.dialog ??= this.loadFragment({\n            name: \"keepcool.sensormanager.view.CustomerDialog\"\n        }) as Promise<Dialog>;\n    \n        this.dialog.then((dialog) => dialog.open())\n            .catch((err: Error) => MessageToast.show(err.message));\n    }\n\n    onCustomerInfoClose(): void {\n        this.dialog.then(function(dialog){\n            dialog.close();\n        }).catch(function(err: Error){\n            MessageToast.show(err.message);\n        });\n    }\n\n    navToSensorStatus(event: ListItemBase$PressEvent) {\n        const sensorIndex = event.getSource().getBindingContext(\"sensorModel\")?.getProperty(\"index\");\n        (this.getOwnerComponent() as UIComponent).getRouter().navTo(\"RouteSensorStatus\", {index: sensorIndex});\n    }\n}"],"mappings":"AAAA,yLASSA,EAASC,EAAA,aAKlB,IAGqBC,EAAgBC,EAAUC,OAAA,6CAAAC,YAAA,SAAAA,IAAAF,EAAAG,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KAmBnCE,cAA0B,EAAE,EAjB7BC,OAAM,SAAAC,IACT,IAAMC,EAAYL,KAAKM,oBACvBN,KAAKO,iBAAiBC,aAAaC,KAAK,WACpC,IAAMC,EAAgBL,IAAS,MAATA,SAAS,SAATA,EAAWM,SAAS,QAC1C,IAAMC,EAAiBF,EAAcG,oBACrCC,EAAaC,KAAKH,EAAeI,QAAQ,uBAAkC,CAAEC,yBAA0B,OAC3G,EAAEC,KAAKlB,OAAM,SAAO,SAASmB,GACzBL,EAAaC,KAAKI,EAAKC,QAAS,CAAEH,yBAA0B,OAChE,EACJ,EAEOV,eAAc,SAAAc,IACjB,IAAMhB,EAAYL,KAAKM,oBACvB,IAAMgB,EAASjB,IAAS,MAATA,SAAS,SAATA,EAAWM,SAAS,eACnC,OAAOW,CACX,EAIAC,eAAc,SAAAC,EAACC,GAAqC,IAAAC,EAEhD,IAAMC,GAAWD,EAAG1B,KAAK4B,aAAS,MAAAF,SAAA,IAAAA,EAAdA,EAAgBG,KAAK,kBAAc,MAAAH,SAAA,SAAnCA,EAAqCI,WAAW,SACpE,IAAMC,EAAON,EAAMO,aAAa,OAEhC,GAAID,IAAQ,OAAQ,CAChB/B,KAAKE,cAAgB,CAAC,IAAI+B,EAAO,cAAeC,EAAeC,GAAI3C,EAAU4C,KAAM,OACvF,MAAO,GAAIL,IAAQ,OAAQ,CACvB/B,KAAKE,cAAgB,CAAC,IAAI+B,EAAO,cAAeC,EAAeG,GAAI7C,EAAU4C,KAAM5C,EAAU8C,KACjG,MAAO,GAAIP,IAAQ,MAAO,CACtB/B,KAAKE,cAAgB,CAAC,IAAI+B,EAAO,cAAeC,EAAeK,GAAI/C,EAAU8C,IAAK,OACtF,KAAO,CACHtC,KAAKE,cAAgB,EACzB,CAEAyB,EAAYa,OAAOxC,KAAKE,cAC5B,EAIAuC,oBAAmB,SAAAC,IAAS,IAAAC,GACxBA,EAAA3C,KAAK4C,UAAM,MAAAD,SAAA,EAAAA,EAAX3C,KAAK4C,OAAW5C,KAAK6C,aAAa,CAC9BC,KAAM,+CAGV9C,KAAK4C,OAAOnC,KAAK,SAACmC,GAAM,OAAKA,EAAOG,MAAM,GAAC,SAChC,SAACC,GAAU,OAAKlC,EAAaC,KAAKiC,EAAI5B,QAAQ,EAC7D,EAEA6B,oBAAmB,SAAAC,IACflD,KAAK4C,OAAOnC,KAAK,SAASmC,GACtBA,EAAOO,OACX,GAAE,SAAO,SAASH,GACdlC,EAAaC,KAAKiC,EAAI5B,QAC1B,EACJ,EAEAgC,kBAAiB,SAAAC,EAAC5B,GAAgC,IAAA6B,EAC9C,IAAMC,GAAWD,EAAG7B,EAAM+B,YAAYC,kBAAkB,kBAAc,MAAAH,SAAA,SAAlDA,EAAoDI,YAAY,SACnF1D,KAAKM,oBAAoCqD,YAAYC,MAAM,oBAAqB,CAACC,MAAON,GAC7F,IAAC,OA7DgB7D,CAAO","sourceRoot":"controller"}},{"offset":{"line":15,"column":0},"map":{"version":3,"file":"util.js","names":["ValueColor","sap_m_library","IconColor","sap_ui_core_library","Threshold","formatIconColor","temperature","Warm","Hot","Critical","Negative","formatTemperature","unit","Math","round","formatValueColor","Neutral","Error","__exports","__esModule"],"sources":["util.ts"],"sourcesContent":["import { ValueColor } from \"sap/m/library\";\nimport { IconColor } from \"sap/ui/core/library\";\n\nexport enum Threshold {\n    Warm = 4,\n    Hot = 5\n}\n\nexport function formatIconColor(temperature: number): IconColor|string {\n    if (temperature < Threshold.Warm) {\n        return \"#0984e3\";\n    } else if (temperature >= Threshold.Warm && temperature < Threshold.Hot) {\n        return IconColor.Critical;\n    } else {\n        return IconColor.Negative;\n    }\n}\n\nexport function formatTemperature(temperature: number, unit: string): number {\n    if (unit === \"°F\") {\n        temperature = temperature * 1.8 + 32;\n    }\n    return Math.round(temperature * 10) / 10;\n}\n\nexport function formatValueColor(temperature: number): ValueColor {\n    if (temperature < Threshold.Warm) {\n        return ValueColor.Neutral;\n    } else if (temperature >= Threshold.Warm && temperature < Threshold.Hot) {\n        return ValueColor.Critical;\n    } else {\n        return ValueColor.Error;\n    }\n}"],"mappings":"AAAA,kGAASA,EAAUC,EAAA,kBACVC,EAASC,EAAA,iBAENC,EAAS,SAATA,OAAS,kBAATA,IAAS,uBAATA,CAAS,EAATA,GAAS,IAKd,SAASC,EAAgBC,GAC5B,GAAIA,EAAcF,EAAUG,KAAM,CAC9B,MAAO,SACX,MAAO,GAAID,GAAeF,EAAUG,MAAQD,EAAcF,EAAUI,IAAK,CACrE,OAAON,EAAUO,QACrB,KAAO,CACH,OAAOP,EAAUQ,QACrB,CACJ,CAEO,SAASC,EAAkBL,EAAqBM,GACnD,GAAIA,IAAS,KAAM,CACfN,EAAcA,EAAc,IAAM,EACtC,CACA,OAAOO,KAAKC,MAAMR,EAAc,IAAM,EAC1C,CAEO,SAASS,EAAiBT,GAC7B,GAAIA,EAAcF,EAAUG,KAAM,CAC9B,OAAOP,EAAWgB,OACtB,MAAO,GAAIV,GAAeF,EAAUG,MAAQD,EAAcF,EAAUI,IAAK,CACrE,OAAOR,EAAWS,QACtB,KAAO,CACH,OAAOT,EAAWiB,KACtB,CACJ,CAAC,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAd,YAAAc,EAAAb,kBAAAa,EAAAP,oBAAAO,EAAAH,mBAAA,OAAAG,CAAA","sourceRoot":"format"}},{"offset":{"line":22,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","model","JSONModel","Device","setDefaultBindingMode","__exports","__esModule"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Device from \"sap/ui/Device\";\n\nexport function createDeviceModel () {\n    const model = new JSONModel(Device);\n    model.setDefaultBindingMode(\"OneWay\");\n    return model;\n}"],"mappings":"AAAA,sGAGO,SAASA,IACZ,IAAMC,EAAQ,IAAIC,EAAUC,GAC5BF,EAAMG,sBAAsB,UAC5B,OAAOH,CACX,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAL,oBAAA,OAAAK,CAAA","sourceRoot":"model"}}]}