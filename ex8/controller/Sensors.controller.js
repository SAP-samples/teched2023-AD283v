"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/Filter","sap/ui/model/FilterOperator","../format/util"],function(e,t,o,s,n){"use strict";var r=n["Threshold"];var i=t.extend("keepcool.sensormanager.controller.Sensors",{constructor:function e(){t.prototype.constructor.apply(this,arguments);this.statusFilters=[]},onInit:function t(){var o=this.getOwnerComponent();this.getSensorModel().dataLoaded().then(function(){var t=o===null||o===void 0?void 0:o.getModel("i18n");var s=t.getResourceBundle();e.show(s.getText("msgSensorDataLoaded"),{closeOnBrowserNavigation:false})}.bind(this))["catch"](function(t){e.show(t.message,{closeOnBrowserNavigation:false})})},getSensorModel:function e(){var t=this.getOwnerComponent();var o=t===null||t===void 0?void 0:t.getModel("sensorModel");return o},onFilterSelect:function e(t){var n;var i=(n=this.getView())===null||n===void 0||(n=n.byId("sensorsList"))===null||n===void 0?void 0:n.getBinding("items");var a=t.getParameter("key");if(a==="Cold"){this.statusFilters=[new o("temperature",s.LT,r.Warm,false)]}else if(a==="Warm"){this.statusFilters=[new o("temperature",s.BT,r.Warm,r.Hot)]}else if(a==="Hot"){this.statusFilters=[new o("temperature",s.GT,r.Hot,false)]}else{this.statusFilters=[]}i.filter(this.statusFilters)},onCustomerInfoPress:function t(){var o;(o=this.dialog)!==null&&o!==void 0?o:this.dialog=this.loadFragment({name:"keepcool.sensormanager.view.CustomerDialog"});this.dialog.then(function(e){return e.open()})["catch"](function(t){return e.show(t.message)})},onCustomerInfoClose:function t(){this.dialog.then(function(e){e.close()})["catch"](function(t){e.show(t.message)})},navToSensorStatus:function e(t){var o;var s=(o=t.getSource().getBindingContext("sensorModel"))===null||o===void 0?void 0:o.getProperty("index");this.getOwnerComponent().getRouter().navTo("RouteSensorStatus",{index:s})}});return i});
//# sourceMappingURL=Sensors.controller.js.map